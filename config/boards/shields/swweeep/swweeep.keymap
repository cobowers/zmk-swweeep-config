#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// global config settings
#define TAPPING_TERM 200
#define QUICK_TAP 180
#define COMBO_TIMEOUT 35

// layer aliases
#define L_DEFAULT 0
#define L_NUM_SYM 1
#define L_NAV_MED 2
#define L_NUMPAD 3
#define L_GAMING 4
#define L_CONTROL 5

#define LHKEYS 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24
#define RHKEYS 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29
#define THUMBKEYS 30 31 32 33

&caps_word {
    continue-list = <UNDERSCORE MINUS BSPC N0 N1 N2 N3 N4 N5 N6 N7 N8 N9>;
};

// allow hold-tap (&lt) to repeat tap the tap behaior on tap then hold
&lt {
    flavor = "balanced";
    tapping-term-ms = <175>;
    quick-tap-ms = <QUICK_TAP>;
};

/ {
    combos {
	compatible = "zmk,combos";
	combo_grave {
	    timeout-ms = <COMBO_TIMEOUT>;
	    key-positions = <0 1>;
	    bindings = <&kp GRAVE>;
	    layers = <0>;
	};
	combo_tilde {
	    timeout-ms = <COMBO_TIMEOUT>;
	    key-positions = <1 2>;
	    bindings = <&kp TILDE>;
	    layers = <0>;
	};
	combo_pipe {
	    timeout-ms = <COMBO_TIMEOUT>;
	    key-positions = <2 3>;
	    bindings = <&kp PIPE>;
	    layers = <0>;
	};
	combo_minus {
	    timeout-ms = <COMBO_TIMEOUT>;
	    key-positions = <8 9>;
	    bindings = <&kp MINUS>;
	    layers = <0>;
	};
	combo_semicolon {
	    timeout-ms = <COMBO_TIMEOUT>;
	    key-positions = <18 19>;
	    bindings = <&kp SEMI>;
	    layers = <0>;
	};
	combo_capsword {
	    timeout-ms = <COMBO_TIMEOUT>;
	    key-positions = <13 16>;
	    bindings = <&caps_word>;
	    layers = <0>;
	};
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MOD";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick-tap-ms = <QUICK_TAP>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        hml: homerow_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MOD_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick-tap-ms = <QUICK_TAP>;
            flavor = "balanced";
            hold-trigger-key-positions = <RHKEYS THUMBKEYS>;
            bindings = <&kp>, <&kp>;
        };
        hmr: homerow_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MOD_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick-tap-ms = <QUICK_TAP>;
            flavor = "balanced";
            hold-trigger-key-positions = <LHKEYS THUMBKEYS>;
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick-tap-ms = <QUICK_TAP>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        hsl: homerow_shift_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick-tap-ms = <QUICK_TAP>;
            flavor = "balanced";
            hold-trigger-key-positions = <RHKEYS THUMBKEYS>;
            bindings = <&kp>, <&kp>;
        };
        hsr: homerow_shift_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick-tap-ms = <QUICK_TAP>;
            flavor = "balanced";
            hold-trigger-key-positions = <LHKEYS THUMBKEYS>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Default";
            bindings = <
    &kp Q        &kp W        &kp F        &kp P          &kp B                    &kp J                &kp L             &kp U        &kp Y        &kp SQT
    &hml LCTL A  &hml LGUI R  &hml LALT S  &hsl LSHIFT T  &kp G                    &kp M                &hsr RSHIFT N     &hmr RALT E  &hmr RGUI I  &hmr RCTL O
    &kp Z        &kp X        &kp C        &kp D          &kp V                    &kp K                &kp H             &kp COMMA    &kp DOT      &kp FSLH
                              &kp RET      &mt LSHFT ESC  &lt L_NUM_SYM BSPC       &lt L_NAV_MED SPACE  &lt L_NUMPAD TAB  &kp DEL
            >;
        };

        number_symbol_layer {  // 1
            label = "Numbers And Symbols";
            bindings = <
    &kp EXCL   &kp AT     &kp HASH  &kp DLLR      &kp PRCNT            &kp CARET      &kp AMPS      &kp KP_MULTIPLY  &kp LPAR  &kp RPAR
    &kp N1     &kp N2     &kp N3    &mt LSHFT N4  &kp N5               &kp N6         &mt RSHFT N7  &kp N8           &kp N9    &kp N0
    &kp BSLH   &kp COLON  &kp SEMI  &kp LBRC      &kp LBKT             &kp RBKT       &kp RBRC      &kp EQUAL        &kp PLUS  &kp MINUS
                          &trans    &trans        &trans               &mo L_CONTROL  &trans        &trans
            >;
        };

        nav_media_layer {  // 2
            label = "Navigation And Media";
            bindings = <
    &kp F1     &kp F2     &kp F3      &kp F4        &kp F5                   &kp F6     &kp F7       &kp F8       &kp F9     &kp F10
    &kp PG_UP  &kp PSCRN  &trans      &kp C_VOL_UP  &kp F11                  &trans     &kp LEFT     &kp DOWN     &kp UP     &kp RIGHT
    &kp PG_DN  &kp SLCK   &kp C_MUTE  &kp C_VOL_DN  &kp F12                  &trans     &trans       &trans       &trans     &trans
                          &trans      &trans        &mo L_CONTROL            &trans     &trans       &trans
            >;
        };

        numpad_layer {  // 3
            label = "Number Pad";
            bindings = <
    &trans  &trans  &trans  &trans         &trans             &kp KP_MULTIPLY  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS
    &trans  &trans  &trans  &trans         &trans             &kp KP_DIVIDE    &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS
    &trans  &trans  &trans  &trans         &trans             &kp KP_DOT       &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_ENTER
                    &trans  &to L_DEFAULT  &trans             &trans           &trans     &kp KP_N0
            >;
        };

        gaming_layer {  // 4
            label = "Gaming";
            bindings = <
    &kp T  &kp Q  &kp W     &kp E       &kp R                &trans  &trans         &trans  &trans  &trans
    &kp G  &kp A  &kp S     &kp D       &kp F                &trans  &trans         &trans  &trans  &trans
    &kp Z  &kp X  &kp C     &kp V       &kp B                &trans  &trans         &trans  &trans  &trans
                  &kp LCTL  &kp LSHIFT  &kp SPACE            &trans  &to L_DEFAULT  &trans
                        >;
                };

        control_layer {  // 5
            label = "Control";
            bindings = <
    &bootloader   &trans          &trans        &trans        &trans                  &trans  &trans  &trans  &trans  &bootloader
    &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &trans  &trans  &trans  &trans  &out OUT_USB
    &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans                  &trans  &trans  &trans  &trans  &out OUT_BLE
                                  &trans        &trans        &trans                  &trans  &trans  &trans
            >;
        };

    };
};

